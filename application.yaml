apiVersion: v1
kind: Pod
metadata:
  name: foo-app
  namespace: exercise-java
  labels:
    app.kubernetes.io/name: proxy
spec:
  containers:
    - name: foo-app
      image: egor140512/soft:0.7
#      resources:
#        requests:
#          memory: "333Mi"
#          cpu: "100m"
#        limits:
#          memory: "333Mi"
#          cpu: "100m"
      env:
        - name: SPRING_DATASOURCE_URL
          valueFrom:
            configMapKeyRef:
              name: constant-storage         # The ConfigMap this value comes from.
              key: spring_datasource_url # The key to fetch.
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            configMapKeyRef:
              name: constant-storage
              key: postgres_user
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: constant-storage
              key: postgres_password
      ports:
        - containerPort: 8080
          name: web
  volumes:
    # You set volumes at the Pod level, then mount them into containers inside that Pod
    - name: config
      configMap:
        # Provide the name of the ConfigMap you want to mount.
        name: constant-storage
---
kind: Service
apiVersion: v1
metadata:
  name: foo-app-service
  namespace: exercise-java
spec:
  selector:
    app.kubernetes.io/name: proxy
  ports:
    - name: foo-app-port
      protocol: TCP
      port: 80
      targetPort: web
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: frontend-foo-app
  namespace: exercise-java
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
#    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: foo-app-service
                port:
                  number: 80
